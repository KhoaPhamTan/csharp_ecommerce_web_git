@using PetStoreAPI.Data
@using Microsoft.EntityFrameworkCore
@using PetStoreAPI.Entities
@using System.Security.Claims
@inject PetStoreAPI.Data.PetStoreDbContext DbContext

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Pet Store</title>
    <link rel="stylesheet" href="~/css/site.css" />
    @RenderSection("Styles", required: false)
</head>

<body>
    @* Fetch categories from the database *@
    @{
        var categories = DbContext.Categories?.ToList() ?? new List<CategoryEntity>();
        var userEmail = User.FindFirst(ClaimTypes.Email)?.Value;
        var userName = userEmail != null ? DbContext.Users.FirstOrDefault(u => u.Email == userEmail)?.Username : null;
    }

    <header class="header">
        <div class="header-title">Pet Store</div>
    </header>

    <nav class="navbar">
        <div class="nav-left">
            @if (User.Identity != null && User.Identity.IsAuthenticated)
            {
                <div class="welcome-message">Welcome, <strong>@userName</strong>, to the store!</div>
            }
            else
            {
                <div class="welcome-message">Welcome to the store!</div>
            }
        </div>
        <div class="nav-center">
            <ul class="nav">
                @foreach (var category in categories)
                {
                    <li class="nav-item">
                        <a class="nav-link @(category.Name == ViewBag.SelectedCategory ? "active" : "")" href="/?categoryName=@category.Name">@category.Name</a>
                    </li>
                }
            </ul>
        </div>
        <div class="nav-right">
            @if (User.Identity != null && User.Identity.IsAuthenticated)
            {
                <a href="javascript:document.getElementById('logout-form').submit();" class="nav-link">Logout</a>
                <form id="logout-form" method="post" action="/Users/logout" style="display:none;">
                    @Html.AntiForgeryToken()
                </form>
            }
            else
            {
                <a asp-page="/Account/Login" class="nav-link">Login</a>
                <a asp-page="/Account/Register" class="nav-link">Register</a>
            }
            <a asp-page="/Help" class="nav-link">Help</a>
            <a href="/Cart/Cart" class="nav-link cart-container">
                <img src="@Url.Content("~/images/cart-icon.png")" alt="Cart" class="cart-icon" />
                <span id="cart-count" class="cart-count">0</span>
            </a>
        </div>
    </nav>

    <main role="main" class="container">
        @RenderBody()
    </main>

    <footer>
    <p>&copy; 2024 - Pet Store</p>
</footer>
<script>
    document.addEventListener('DOMContentLoaded', async function() {
        var cartElement = document.getElementById('cart-count');
        var isAuthenticated = '@(User.Identity.IsAuthenticated.ToString().ToLower())';
        if (cartElement && isAuthenticated === 'true') {
            try {
                console.log('Fetching cart count...');
                const response = await fetch('http://localhost:5134/Cart/count', { // Ensure this matches the API backend address
                    credentials: 'include', // Ensure cookies are sent with the request
                    headers: {
                        'Accept': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest' // Add this header to indicate an AJAX request
                    }
                });
                console.log('Response status:', response.status);
                console.log('Response status text:', response.statusText);
                if (response.ok) {
                    const cart = await response.json();
                    console.log('Cart response:', cart);
                    if (typeof cart.count === 'number' || typeof cart.count === 'string') {
                        cartElement.textContent = String(cart.count); // Ensure the count is displayed as a string
                    } else {
                        console.error('Unexpected cart count value:', cart.count);
                    }
                } else {
                    console.error('Failed to fetch cart count:', response.status, response.statusText);
                }
            } catch (error) {
                console.error('Error fetching cart count:', error);
            }
        }
    });
</script>
@RenderSection("Scripts", required: false)
</body>

</html>